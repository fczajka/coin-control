// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  firstName    String
  lastName     String
  salt         String
  iv           String
  key          String
  deleted      Boolean       @default(false)
  accounts     Account[]
  transactions Transaction[]
  category     Category[]

  @@index([id])
}

model Account {
  id           String        @id @default(uuid())
  userId       String
  name         String
  amount       String
  currency     String
  owner        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@index([userId])
}

model Transaction {
  id            String       @id @default(uuid())
  userId        String
  accountId     String
  type          String
  date          String
  categoryId    String
  subcategoryId String?
  amount        String
  owner         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  account       Account      @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category      Category     @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)

  @@index([userId, accountId])
}

model Category {
  id            String        @id @default(uuid())
  userId        String
  name          String
  owner         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions  Transaction[]
  subcategories Subcategory[]

  @@index([userId])
}

model Subcategory {
  id           String        @id @default(uuid())
  categoryId   String
  name         String
  category     Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@index([categoryId])
}
